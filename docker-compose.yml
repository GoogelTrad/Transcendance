services:
  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    ports:
      - "80:80" 
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - tdc
      
  db:
    container_name: db
    image: postgres
    restart: unless-stopped
    env_file: .env
    environment:
      - WATCHPACK_POLLING=true
    ports:
      - 5432:5432
    networks:
      - tdc
    volumes:
      - db:/home/db

  react:
    container_name: react
    image: front
    restart: unless-stopped
    env_file: .env
    build: ./frontend/
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - project:/home/
    depends_on:
      - db
      - django
    ports:
      - 3000:3000
    networks:
      - tdc

  django: 
    container_name: django
    image: django
    restart: unless-stopped
    env_file: .env
    build: ./backend/
    volumes:
      - project:/home/
    depends_on:
      - db
      - redis
    ports:
      - 8000:8000
      - 8001:8001
    networks: 
      - tdc
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WATCHPACK_POLLING=true
  
  redis:
    image: redis:latest
    container_name: redis
    environment:
      - WATCHPACK_POLLING=true
    ports:
      - "6379:6379"
    command: ["redis-server", "--bind", "0.0.0.0"]
    networks:
      - tdc

volumes:
  caddy_data:
  caddy_config:
  project:
    driver: local
    driver_opts:
        type: none
        o: 'bind'
        device: .
  db:
    driver: local
    driver_opts:
      type: none
      o: 'bind'
      device: ./db

networks:
  tdc:
    name: tdc
    driver: bridge