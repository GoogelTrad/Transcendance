{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst BASE_URL = 'ws://localhost:8000/ws/';\nexport default function useSocket(name) {\n  _s();\n  const [ready, setReady] = useState(false);\n  const [socket, setSocket] = useState();\n  useEffect(() => {\n    let socket = new WebSocket(`${BASE_URL}${name}/`);\n    socket.onopen = () => {\n      console.log('WebSocket connected');\n      setReady(true);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    setSocket(socket);\n    return () => {\n      if (ready) {\n        socket.close();\n        setReady(false);\n      }\n    };\n  }, [name, ready]);\n  const send = data => {\n    if (socket) {\n      return socket.send(JSON.stringify(data));\n    }\n  };\n  const add = listenner => {\n    if (socket) socket.onmessage = listenner;\n  };\n  return {\n    current: socket,\n    ready,\n    send,\n    add\n  };\n}\n_s(useSocket, \"PRg/6zuMMZt7J0AL7S73J84gLow=\");","map":{"version":3,"names":["useEffect","useState","BASE_URL","useSocket","name","_s","ready","setReady","socket","setSocket","WebSocket","onopen","console","log","onclose","close","send","data","JSON","stringify","add","listenner","onmessage","current"],"sources":["/home/frontend/core/src/socket.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst BASE_URL = 'ws://localhost:8000/ws/'\n\nexport default function useSocket(name) {\n\tconst [ready, setReady] = useState(false);\n\tconst [socket, setSocket] = useState();\n  \n\tuseEffect(() => {\n\t\tlet socket = new WebSocket(`${BASE_URL}${name}/`)\n\t\tsocket.onopen = () => {\n\t\t\tconsole.log('WebSocket connected');\n\t\t\tsetReady(true);\n\t\t};\n\n\t\tsocket.onclose = () => {\n\t\t\tconsole.log('WebSocket disconnected');\n\t\t};\n\n\t\tsetSocket(socket);\n\n\t\treturn () => {\n\t\t\tif (ready) {\n\t\t\t\tsocket.close();\n\t\t\t\tsetReady(false);\n\t\t\t}\n\t\t};\n\t}, [name, ready]);\n\n\tconst send = (data) => {\n\t\tif (socket) {\n\t\t\treturn socket.send(JSON.stringify(data));\n\t\t}\n\t}\n\n\tconst add = (listenner) => {\n\t\tif (socket)\n\t\t\tsocket.onmessage = listenner\n\t}\n\n\treturn {\n\t\tcurrent: socket, ready, send, add\n\t};\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAG,yBAAyB;AAE1C,eAAe,SAASC,SAASA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACf,IAAIQ,MAAM,GAAG,IAAIE,SAAS,CAAC,GAAGR,QAAQ,GAAGE,IAAI,GAAG,CAAC;IACjDI,MAAM,CAACG,MAAM,GAAG,MAAM;MACrBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCN,QAAQ,CAAC,IAAI,CAAC;IACf,CAAC;IAEDC,MAAM,CAACM,OAAO,GAAG,MAAM;MACtBF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACtC,CAAC;IAEDJ,SAAS,CAACD,MAAM,CAAC;IAEjB,OAAO,MAAM;MACZ,IAAIF,KAAK,EAAE;QACVE,MAAM,CAACO,KAAK,CAAC,CAAC;QACdR,QAAQ,CAAC,KAAK,CAAC;MAChB;IACD,CAAC;EACF,CAAC,EAAE,CAACH,IAAI,EAAEE,KAAK,CAAC,CAAC;EAEjB,MAAMU,IAAI,GAAIC,IAAI,IAAK;IACtB,IAAIT,MAAM,EAAE;MACX,OAAOA,MAAM,CAACQ,IAAI,CAACE,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;IACzC;EACD,CAAC;EAED,MAAMG,GAAG,GAAIC,SAAS,IAAK;IAC1B,IAAIb,MAAM,EACTA,MAAM,CAACc,SAAS,GAAGD,SAAS;EAC9B,CAAC;EAED,OAAO;IACNE,OAAO,EAAEf,MAAM;IAAEF,KAAK;IAAEU,IAAI;IAAEI;EAC/B,CAAC;AACF;AAACf,EAAA,CAvCuBF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}