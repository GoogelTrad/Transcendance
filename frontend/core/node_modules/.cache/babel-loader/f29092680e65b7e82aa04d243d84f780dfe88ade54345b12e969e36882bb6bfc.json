{"ast":null,"code":"/*\n\nimport { socket }  from \"../socket\";\nimport { useEffect, useRef } from \"react\";\n\n\nexport default function Room() {\n\n\tconst socket = useRef(null);\n\n\tuseEffect(() => {\n\t\tsocket.current = new WebSocket('ws://localhost:8000/ws/chat/');\n\n\t\tsocket.current.onopen = () => {\n\t\tconsole.log('WebSocket connected');\n\t\t};\n\n\t\tsocket.current.onclose = () => {\n\t\tconsole.log('WebSocket disconnected');\n\t\t};\n\n\t\treturn () => {\n\t\tsocket.current.close();\n\t\t};\n\t}, []);\n\n\t//const roomName = JSON.parse(document.getElementById('room-name').textContent);\n\n\t// document.querySelector('#chat-message-input').focus();\n\t// document.querySelector('#chat-message-input').onkeyup = function(e) {\n\t// \tif (e.key === 'Enter') {  // enter, return\n\t// \t\tdocument.querySelector('#chat-message-submit').click();\n\t// \t}\n\t// };\n\n\t// document.querySelector('#chat-message-submit').onclick = function(e) {\n\t// \tconst messageInputDom = document.querySelector('#chat-message-input');\n\t// \tconst message = messageInputDom.value;\n\t// \tsocket.emit('message', JSON.stringify({\n\t// \t\t'message': message\n\t// \t}));\n\t// \tmessageInputDom.value = '';\n\t// };\n\n\treturn (\n\t\t<>\n    \t\t<textarea id=\"chat-log\" cols=\"100\" rows=\"20\"></textarea>\n    \t\t<input id=\"chat-message-input\" type=\"text\" size=\"100\"/>\n    \t\t<input id=\"chat-message-submit\" type=\"button\" value=\"Send\"/>\n\t\t</>)\n}*/","map":{"version":3,"names":[],"sources":["/home/frontend/core/src/chat/index.js"],"sourcesContent":["/*\n\nimport { socket }  from \"../socket\";\nimport { useEffect, useRef } from \"react\";\n\n\nexport default function Room() {\n\n\tconst socket = useRef(null);\n\n\tuseEffect(() => {\n\t\tsocket.current = new WebSocket('ws://localhost:8000/ws/chat/');\n\n\t\tsocket.current.onopen = () => {\n\t\tconsole.log('WebSocket connected');\n\t\t};\n\n\t\tsocket.current.onclose = () => {\n\t\tconsole.log('WebSocket disconnected');\n\t\t};\n\n\t\treturn () => {\n\t\tsocket.current.close();\n\t\t};\n\t}, []);\n\n\t//const roomName = JSON.parse(document.getElementById('room-name').textContent);\n\n\t// document.querySelector('#chat-message-input').focus();\n\t// document.querySelector('#chat-message-input').onkeyup = function(e) {\n\t// \tif (e.key === 'Enter') {  // enter, return\n\t// \t\tdocument.querySelector('#chat-message-submit').click();\n\t// \t}\n\t// };\n\n\t// document.querySelector('#chat-message-submit').onclick = function(e) {\n\t// \tconst messageInputDom = document.querySelector('#chat-message-input');\n\t// \tconst message = messageInputDom.value;\n\t// \tsocket.emit('message', JSON.stringify({\n\t// \t\t'message': message\n\t// \t}));\n\t// \tmessageInputDom.value = '';\n\t// };\n\n\treturn (\n\t\t<>\n    \t\t<textarea id=\"chat-log\" cols=\"100\" rows=\"20\"></textarea>\n    \t\t<input id=\"chat-message-input\" type=\"text\" size=\"100\"/>\n    \t\t<input id=\"chat-message-submit\" type=\"button\" value=\"Send\"/>\n\t\t</>)\n}*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}